# development config
version: "3.3"
services:
  example.org:
    image: nginx:1.23
    container_name: nginx
    # depends_on:
    #   - frontend
    ports:
      - 3000:80
    volumes:
      - ../js/app-react/dist:/var/www/example.com/public
      - ./nginx.conf:/etc/nginx/nginx.conf
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ../js/app-react
  #   volumes: 
  #     - npm:/app/app-react/node_modules
  #     - ../js/app-react:/app/app-react
  app:
    image: eclipse-temurin:17-jdk-focal
    command: bash -c "./mvnw spring-boot:run"
    container_name: spring
    depends_on:
      - db
      - redis
    ports:
      - 8081:8081
    working_dir: /app
    volumes:
      - ./:/app
      - app:/root/.m2
  redis:
    # TODO: set credentials to env
    container_name: spring_vm_redis
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass authentication
    volumes:
      - redis:/data
  db:
    # TODO: set credentials to env
    container_name: spring_vm_db
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: "app_employee"
      MYSQL_USER: "employeeDB"
      MYSQL_PASSWORD: "employee"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - my-db:/var/lib/mysql
volumes:
  my-db:
  redis:
  app:
  npm: